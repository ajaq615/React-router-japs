{"ast":null,"code":"var _jsxFileName = \"C:\\\\AJ\\\\React\\\\React-router-japs\\\\frontend\\\\src\\\\pages\\\\EventDetails.js\",\n  _s = $RefreshSig$();\nimport EventItem from \"../components/EventItem\";\nimport { useLoaderData, json } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetailsPage = () => {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(EventDetailsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetailsPage;\nexport default EventDetailsPage;\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch event details!'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailsPage\");","map":{"version":3,"names":["EventItem","useLoaderData","json","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailsPage","_s","data","children","event","events","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","_ref","request","params","id","eventId","response","fetch","ok","message","status","$RefreshReg$"],"sources":["C:/AJ/React/React-router-japs/frontend/src/pages/EventDetails.js"],"sourcesContent":["import EventItem from \"../components/EventItem\";\r\nimport { useLoaderData, json } from \"react-router-dom\";\r\n\r\nconst EventDetailsPage = () => {\r\n    const data = useLoaderData();\r\n  return (\r\n    <>\r\n      <EventItem event={data.events}/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EventDetailsPage;\r\n\r\nexport async function loader({request, params}) {\r\n  const id = params.eventId;\r\n  const response = await fetch('http://localhost:8080/events/' + id);\r\n\r\n  if(!response.ok) {\r\n    throw json({message: 'Could not fetch event details!'}, {status: 500})\r\n  } else {\r\n    return response;\r\n  }\r\n}\r\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,yBAAyB;AAC/C,SAASC,aAAa,EAAEC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,IAAI,GAAGR,aAAa,EAAE;EAC9B,oBACEG,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACEN,OAAA,CAACJ,SAAS;MAACW,KAAK,EAAEF,IAAI,CAACG;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAE,iBAC/B;AAEP,CAAC;AAACR,EAAA,CAPID,gBAAgB;EAAA,QACLN,aAAa;AAAA;AAAAgB,EAAA,GADxBV,gBAAgB;AAStB,eAAeA,gBAAgB;AAE/B,OAAO,eAAeW,MAAMA,CAAAC,IAAA,EAAoB;EAAA,IAAnB;IAACC,OAAO;IAAEC;EAAM,CAAC,GAAAF,IAAA;EAC5C,MAAMG,EAAE,GAAGD,MAAM,CAACE,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAElE,IAAG,CAACE,QAAQ,CAACE,EAAE,EAAE;IACf,MAAMxB,IAAI,CAAC;MAACyB,OAAO,EAAE;IAAgC,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EACxE,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF;AAAC,IAAAP,EAAA;AAAAY,YAAA,CAAAZ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}